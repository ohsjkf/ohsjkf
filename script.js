const game = {
    money: 0,
    clickPower: 1,
    businesses: [
        { name: "–ö–∞—Ñ–µ ¬´–£ –•–æ–º—ã¬ª", price: 100, income: 10, owned: false },
        { name: "–ó–æ–æ–ø–∞—Ä–∫ –•–æ–º—è–∫–æ–≤", price: 1000, income: 75, owned: false },
        { name: "–•–æ–º—è—á—å—è –∫–∞—á–∞–ª–∫–∞", price: 5000, income: 300, owned: false },
        { name: "–ê–ó–° ¬´–•–æ–º—è–∫¬ª", price: 10000, income: 500, owned: false },
        { name: "–®–∫–æ–ª–∞ ¬´–•–æ–º–∞ –°–∞–ø–∏–µ–Ω—Å¬ª", price: 50000, income: 2000, owned: false },
        { name: "$HMSTR", price: 75000, income: 3000, owned: false, warning: "–¢—ã –¥—É—Ä–∞–∫? –ù–µ —Å—Ç–æ–∏—Ç —ç—Ç–æ –ø–æ–∫—É–ø–∞—Ç—å" },
        { name: "–ê–≤—Ç–æ—Å–∞–ª–æ–Ω ¬´–ù–∞ —Ö–æ–º—è–∫–µ¬ª", price: 100000, income: 3500, owned: false },
        { name: "–ò–≥—Ä–∞ ¬´Hamster Combat¬ª", price: 250000, income: 7500, owned: false }
    ],

    earnMoney: function () {
        this.money += this.clickPower;
        this.updateUI();
    },

    buyBusiness: function (index) {
        let business = this.businesses[index];
        if (!business.owned && this.money >= business.price) {
            this.money -= business.price;
            business.owned = true;
            if (business.warning) alert(business.warning);
            this.updateUI();
        }
    },

    updateUI: function () {
        document.getElementById("money").textContent = this.money;
        document.getElementById("click-power").textContent = this.clickPower;
        
        let businessContainer = document.getElementById("business-container");
        businessContainer.innerHTML = "";
        this.businesses.forEach((business, index) => {
            let div = document.createElement("div");
            div.classList.add("business-card");
            div.innerHTML = `<h3>${business.name}</h3>
                <p>–¶–µ–Ω–∞: ${business.price} –º–æ–Ω–µ—Ç</p>
                <p>–î–æ—Ö–æ–¥: ${business.income} –≤ —Å–µ–∫—É–Ω–¥—É</p>
                ${business.owned ? "<p>–ö—É–ø–ª–µ–Ω–æ</p>" : `<button onclick="game.buyBusiness(${index})">–ö—É–ø–∏—Ç—å</button>`}`;
            businessContainer.appendChild(div);
        });
    }
};

const pvpGame = {
    playerHP: 100,
    botHP: 100,
    attackPower: 10,
    biteBoost: 0,
    botMoves: ["–ê—Ç–∞–∫–∞", "–ó–∞—â–∏—Ç–∞", "–©–µ–ª–∫–Ω—É—Ç—å –∑—É–±–∞–º–∏", "–£–ø–∞—Å—Ç—å"],
    
    startBattle: function () {
        this.playerHP = 100;
        this.botHP = 100;
        this.biteBoost = 0;
        document.getElementById("battle-container").style.display = "block";
        this.updateBattleUI();
    },

    playerAttackAction: function () {
        this.botHP -= this.attackPower + this.biteBoost;
        this.logBattle("–¢—ã –∞—Ç–∞–∫–æ–≤–∞–ª –±–æ—Ç–∞!");
        this.endTurn();
    },

    biteAction: function () {
        this.biteBoost += 5;
        this.logBattle("ü¶∑ –¢—ã —â–µ–ª–∫–Ω—É–ª –∑—É–±–∞–º–∏, —É—Ä–æ–Ω –∞—Ç–∞–∫–∏ —É–≤–µ–ª–∏—á–µ–Ω!");
        this.endTurn();
    },

    clawAction: function () {
        this.logBattle("üêæ –¢—ã –≤—ã—Ç–∞—â–∏–ª –∫–æ–≥—Ç–∏, –±–ª–æ–∫ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ —Å–Ω–∏–∂–µ–Ω!");
        this.endTurn();
    },

    surrender: function () {
        this.logBattle("üè≥Ô∏è –•–æ–º—è–∫–∏ –Ω–µ —Å–¥–∞—é—Ç—Å—è!");
        this.endTurn();
    },

    botTurn: function () {
        let move = this.botMoves[Math.floor(Math.random() * this.botMoves.length)];
        if (move === "–ê—Ç–∞–∫–∞") {
            this.playerHP -= 10;
            this.logBattle("ü§ñ –ë–æ—Ç –∞—Ç–∞–∫–æ–≤–∞–ª!");
        } else if (move === "–ó–∞—â–∏—Ç–∞") {
            this.logBattle("ü§ñ –ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª —É–¥–∞—Ä!");
        } else if (move === "–©–µ–ª–∫–Ω—É—Ç—å –∑—É–±–∞–º–∏") {
            this.logBattle("ü§ñ –ë–æ—Ç —â–µ–ª–∫–Ω—É–ª –∑—É–±–∞–º–∏, –µ–≥–æ –∞—Ç–∞–∫–∞ —É–≤–µ–ª–∏—á–µ–Ω–∞!");
        } else if (move === "–£–ø–∞—Å—Ç—å") {
            this.logBattle("ü§ñ –ë–æ—Ç —É–ø–∞–ª –∏ –ø—Ä–æ–ø—É—Å—Ç–∏–ª —Ö–æ–¥!");
            return;
        }
        this.updateBattleUI();
        this.checkWin();
    },

    endTurn: function () {
        setTimeout(() => this.botTurn(), 1000);
        this.updateBattleUI();
        this.checkWin();
    },

    logBattle: function (text) {
        let log = document.getElementById("battle-log");
        log.innerHTML += `<p>${text}</p>`;
        log.scrollTop = log.scrollHeight;
    },

    updateBattleUI: function () {
        document.getElementById("player-hp").textContent = Math.max(0, this.playerHP);
        document.getElementById("bot-hp").textContent = Math.max(0, this.botHP);
    },

    checkWin: function () {
        if (this.botHP <= 0) {
            this.logBattle("üéâ –¢—ã –ø–æ–±–µ–¥–∏–ª! –î–æ—Ö–æ–¥ –∑–∞ –∫–ª–∏–∫ —É–≤–µ–ª–∏—á–µ–Ω –≤ 2 —Ä–∞–∑–∞!");
            game.clickPower *= 2;
            game.updateUI();
            setTimeout(() => document.getElementById("battle-container").style.display = "none", 2000);
        } else if (this.playerHP <= 0) {
            this.logBattle("üíÄ –¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª!");
            setTimeout(() => document.getElementById("battle-container").style.display = "none", 2000);
        }
    }
};

setInterval(() => {
    game.businesses.forEach(b => {
        if (b.owned) game.money += b.income;
    });
    game.updateUI();
}, 1000);
